@Library('conduit')_

def pipelineConfig = [:]
pipeline {
  agent any
  options {
    ansiColor('xterm')
    skipDefaultCheckout()
    buildDiscarder(logRotator(numToKeepStr: '5'))
  }
  stages {
		stage('Initialise') {
			steps {
				script {
					pipelineConfig = initialize 'config/Jenkinsfile.yaml'
				}
			}
		} // initialize
		stage('Build') { steps { } }
		stage('Tests') {
            failFast true
            parallel {
                stage('unit') { steps { } }
                stage('static') { steps { } }
            }
		} // unit tests
        stage('Package') { steps {} }
        stage('Deploy') { steps { } }
        stage('E2E') { steps { } }
        stage('Release') {
            stages {
                stage('Publish') { steps { } }
                stage('') { steps { } }
            }
        }

	} // stages
     post {
        always {
            script {
                cleanWs()
            }
        }
    }
} // pipeline